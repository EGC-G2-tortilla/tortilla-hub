name: CI/CD Docker Build

on:
  push:
    branches:
      - develop

jobs:
  build_and_deploy:
    name: Build and Deploy Docker Containers
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      # Login usando usuario y contrase√±a
      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349

      - name: Build and push Docker image
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo $DOCKER_TOKEN | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          docker build -f docker/images/Dockerfile.dev -t uvlhubtortilla/tortilla-hub:latest .
          docker push uvlhubtortilla/tortilla-hub:latest

      - name: Set up and deploy containers
        env:
          MYSQL_ROOT_PASSWORD: uvlhub_root_password
          MYSQL_DATABASE: uvlhubdb
        run: |
          docker volume create flask_mysql_volume
          docker network create flask_network || true
          docker run -d --name mysql-container --network flask_network \
            -v flask_mysql_volume:/var/lib/mysql \
            -e MYSQL_ROOT_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }} \
            -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} \
            mysql:latest
          docker compose -f docker/docker-compose.dev.yml up -d
