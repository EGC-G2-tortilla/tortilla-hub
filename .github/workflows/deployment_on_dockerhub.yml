# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: CI/CD Docker Build

on:
  push:
    branches:
      - develop

jobs:
  build_and_deploy:
    name: Build and Deploy Docker Containers
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{secrets.DOCKERHUB_TOKEN}}" | docker login -u ${{secrets.DOCKER_USER}} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349
        # uses: docker/setup-buildx-action@v2


      - name: Build and push Docker image
        run: |
          docker build -f docker/images/Dockerfile.dev -t uvlhubtortilla/tortilla-hub:latest .
          docker push uvlhubtortilla/tortilla-hub:latest

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.PI_HOST}} >> ~/.ssh/known_hosts
      

      - name: Degub SSH connection
        run: |
          ssh -vvv -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "echo 'SSH connection successful'"

          
      - name: Pull Docker image
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "docker pull uvlhubtortilla/tortilla-hub:latest"
        

      - name: Start Docker containers
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} << 'EOF'
            cd /home/tortilla/developer/tortilla-hub
            docker compose -f docker/docker-compose.dev.yml up -d --force-recreate
          EOF